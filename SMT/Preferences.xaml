<Window x:Class="SMT.PreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SMT"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Name="PrefsWindow"
        Title="Preferences" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" Loaded="Window_Loaded">
    <Window.Resources>
        <local:JoinStringConverter  x:Key="stringJoiner" />
        <local:NegateBooleanConverter x:Key="NegateBooleanConverter" />
    </Window.Resources>

    <Grid Background="{DynamicResource ButtonBorder}" Height="Auto" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Top">
        <DockPanel HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
            <TabControl x:Name="tabControl" DockPanel.Dock="Top">
                <TabItem Header="General">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Grid.ColumnSpan="2">
                            <StackPanel>
                                <GroupBox Margin="4" Height="Auto">
                                    <GroupBox.Header>
                                        <TextBlock FontWeight="Bold">General</TextBlock>
                                    </GroupBox.Header>
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding Path=AlwaysOnTop}" Margin="0,3" Content="Always on top" />
                                        <CheckBox IsChecked="{Binding Path=SyncActiveCharacterBasedOnActiveEVEClient}" Margin="0,3">Auto sync character to active window</CheckBox>
                                        <CheckBox x:Name="syncESIPositionChk" Margin="0,3" Checked="syncESIPositionChk_Checked" Unchecked="syncESIPositionChk_Checked">Use ESI for character positions</CheckBox>
                                        <CheckBox IsChecked="{Binding Path=DrawRoute}" Margin="0,3" Content="Draw Route" />
                                        <CheckBox IsChecked="{Binding MinimizeToTray}" Margin="0,3" Content="Minimize to tray" />
                                        <CheckBox IsChecked="{Binding CloseToTray}" Margin="0,3" Content="Close to tray">
                                            <CheckBox.IsEnabled>
                                                <Binding Path="MinimizeToTray" Converter="{StaticResource NegateBooleanConverter}" />
                                            </CheckBox.IsEnabled>
                                        </CheckBox>

                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Header="Logs (changing these requires a restart)" Margin="4" Height="125">
                                    <StackPanel>
                                        <Label Content="Current Log Folder : " />
                                        <Label Content="{Binding Path=CurrentEveLogFolderLocation}" />

                                        <Button Name="SetLogLocation" Content="Set Custom Log Folder" Click="SetLogLocation_Click" Margin="3" Width="140" HorizontalAlignment="Left" />
                                        <Button Name="DefaultLogLocation" Content="Set Default Log Folder" Click="DefaultLogLocation_Click" Margin="3" Width="140" HorizontalAlignment="Left" />
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <GroupBox Header="Performance" Margin="4" Height="Auto">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Path=DisableJumpBridgesPathAnimation}" Margin="0,3">Disable jump bridges path animation</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=DisableRoutePathAnimation}" Margin="0,3">Disable route path animation</CheckBox>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Region" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox  Margin="4" Height="Auto">
                                <StackPanel>
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowActiveIncursions}" Content="Show Active Incursions" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowJoveObservatories}" Content="Show Jove Observatories" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowToolBox}" Content="Show Toolbox" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowTrueSec}" Content="Show TrueSec" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowSystemPopup}" Content="Show System Popups" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowZKillData}" Content="Show ZKill Data" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowNegativeRattingDelta}" Content="Show Negative Ratting Delta" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowRattingDataAsDelta}" Content="Show Ratting Data as Delta" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowSimpleSecurityView}" Content="Show Simple Security View (Just HS/LS/null)" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowTrigInvasions}" Content="Show Trig Invasions" />

                                    <StackPanel Orientation="Horizontal" Margin="0,0">
                                        <xctk:IntegerUpDown Margin="1,3" Value="{Binding Path=MaxESIOverlayValue}" Minimum="30" Maximum="300" Width="60"  Foreground="White" />
                                        <Label>Maximum Overlay Size</Label>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <GroupBox Margin="4" Height="Auto">
                                <StackPanel>
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowCompactCharactersOnMap}" Content="Compact Character Mode" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowOfflineCharactersOnMap}" Content="Show Offline Characters" />

                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=LimitESIDataToRegion}" Content="Limit data overlay to in-region only" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=FollowOnZoom}" Content="Follow Selected System when Zoomed" />
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ClampMaxESIOverlayValue}" Content="Clamp overlay Data to Maximum" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Universe" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Margin="4" Height="auto">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0">
                                        <xctk:DoubleUpDown Value="{Binding Path=UniverseMaxZoomDisplaySystems}" Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="80" Increment="0.1" Maximum="5" Minimum="0.1" FormatString="F1" Background="Transparent"  Foreground="White" />
                                        <Label Content="Systems Max Zoom" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0">
                                        <xctk:DoubleUpDown Value="{Binding Path=UniverseMaxZoomDisplaySystemsText}" Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="80" Increment="0.1" Maximum="5" Minimum="0.1" FormatString="F1" Background="Transparent"  Foreground="White" />
                                        <Label Content="Text Max Zoom" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <GroupBox  Margin="4" Height="auto">
                                <StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>

                <TabItem Header="Intel">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Header="General" Margin="4">
                                <StackPanel>

                                    <CheckBox IsChecked="{Binding Path=PlayIntelSound}" Margin="0,2">Warning Sound</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=FlashWindow}" Margin="0,2" Content="Flash Window"/>
                                    <StackPanel Orientation="Vertical" Margin="0,2">
                                        <Label Content="Warning Sound Volume" />
                                        <Slider x:Name="intelVolumeSlider" Value="{Binding Path=IntelSoundVolume}" Minimum="0" Maximum="1" TickFrequency="0.1" TickPlacement="BottomRight" IsMoveToPointEnabled="True" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=IntelTextSize}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="8" Maximum="20" Background="Transparent"  Foreground="White" />
                                        <Label Content="Intel Text Size" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=MaxIntelSeconds}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="30" Maximum="1200" Background="Transparent"  Foreground="White" />
                                        <Label Content="Intel Max Time (s)" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=ZkillExpireTimeMinutes}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="5" Maximum="120" Background="Transparent"  Foreground="White" ValueChanged="zkilltime_ValueChanged" />
                                        <Label Content="Zkill Max Time (minutes)" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="DangerZone" Margin="4">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Path=ShowDangerZone}" Margin="0,2">Show Dangerzone</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=PlaySoundOnlyInDangerZone}" Margin="0,2" Content="Limit Sound to Dangerzone">
                                        <CheckBox.IsEnabled>
                                            <Binding Path="PlayIntelSound" Converter="{StaticResource NegateBooleanConverter}" />
                                        </CheckBox.IsEnabled>
                                    </CheckBox>
                                    <CheckBox IsChecked="{Binding Path=FlashWindowOnlyInDangerZone}" Margin="0,2" Content="Limit Window Flash to Dangerzone">
                                        <CheckBox.IsEnabled>
                                            <Binding Path="FlashWindow" Converter="{StaticResource NegateBooleanConverter}" />
                                        </CheckBox.IsEnabled>
                                    </CheckBox>
                                    <CheckBox IsChecked="{Binding Path=PlayIntelSoundOnUnknown}" Margin="0,2">Warning on Unknown</CheckBox>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <GroupBox Margin="4" Height="auto">

                                <StackPanel Orientation="Vertical">
                                    <Label>Channel Filters</Label>
                                    <TextBox Width="271" Height="100" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=EM.IntelFilters, Converter={StaticResource stringJoiner}, Mode=TwoWay}"  TextWrapping="Wrap" AcceptsReturn="True" />
                                    <Label>Clear Filters</Label>
                                    <TextBox Width="271"  Height="80" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=EM.IntelClearFilters, Converter={StaticResource stringJoiner}, Mode=TwoWay}"  TextWrapping="Wrap" AcceptsReturn="True" />
                                    <Label>Ignore Filters</Label>
                                    <TextBox Width="271"  Height="80" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=EM.IntelIgnoreFilters, Converter={StaticResource stringJoiner}, Mode=TwoWay}"  TextWrapping="Wrap" AcceptsReturn="True" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="SOV">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Header="General" Margin="4" Height="auto">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Path=ShowCoalition}" Margin="0,2">Show SOV as Coalitions</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=SOVShowConflicts}" Margin="0,2">Highlight SOV conflict areas</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=SOVBasedITCU}" Margin="0,2">Show SOV based on TCU</CheckBox>

                                    <CheckBox IsChecked="{Binding Path=ShowIhubVunerabilities}" Margin="0,2">Show IHub Timer</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=ShowTCUVunerabilities}" Margin="0,2">Show TCU Timer</CheckBox>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=UpcomingSovMinutes}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="5" Maximum="360" Background="Transparent"  Foreground="White" />
                                        <Label Content="Upcoming Period (Mins)" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <GroupBox Header="Beacons" Margin="4" Height="auto">
                                <StackPanel>
                                    <CheckBox Margin="0,3" IsChecked="{Binding Path=ShowCynoBeacons}" Content="Show Cyno Beacons" />
                                    <TextBox Width="271" Height="300" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=CynoBeaconSystems, Converter={StaticResource stringJoiner}, Mode=TwoWay}"  TextWrapping="Wrap" AcceptsReturn="True" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Fleet">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Header="General" Margin="4" Height="auto">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Path=FleetShowOnMap}" Margin="0,2">Show Fleet Members</CheckBox>
                                    <CheckBox IsChecked="{Binding Path=FleetShowShipType}" Margin="0,2">Show Fleet Member Ship Type</CheckBox>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=FleetMaxMembersPerSystem}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="1" Maximum="30" Background="Transparent"  Foreground="White" />
                                        <Label Content="Max Fleet Members Display" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Overlay">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Header="General" Margin="4" Height="auto">
                                <StackPanel>

                                    <StackPanel Orientation="Vertical" Margin="0,2">
                                        <Label Content="Overlay Window Background Opacity" />
                                        <Slider x:Name="overlay_BackgroundOpacitySlider" Value="{Binding Path=OverlayBackgroundOpacity}" Minimum="0.05" Maximum="1.0" TickFrequency="0.05" TickPlacement="BottomRight" IsMoveToPointEnabled="True" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical" Margin="0,2">
                                        <Label Content="Overlay Window Content Opacity" />
                                        <Slider x:Name="overlay_OpacitySlider" Value="{Binding Path=OverlayOpacity}" Minimum="0.05" Maximum="1.0" TickFrequency="0.05" TickPlacement="BottomRight" IsMoveToPointEnabled="True" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical" Margin="0,2">
                                        <Label Content="Overlay Jump Range" />
                                        <Slider x:Name="overlay_RangeSlider" Value="{Binding Path=OverlayRange}" Minimum="1" Maximum="10" TickFrequency="1" TickPlacement="BottomRight" IsMoveToPointEnabled="True" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=IntelFreshTime}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="1" Maximum="900" Background="Transparent"  Foreground="White" />
                                        <Label Content="First, Intel is fresh for x seconds" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=IntelStaleTime}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="5" Maximum="1200" Background="Transparent"  Foreground="White" />
                                        <Label Content="Then, Intel is stale for x seconds" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,2">
                                        <xctk:IntegerUpDown Value="{Binding Path=IntelHistoricTime}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="70" Minimum="5" Maximum="1200" Background="Transparent"  Foreground="White" ValueChanged="zkilltime_ValueChanged" />
                                        <Label Content="Finally, Intel is historic for x seconds" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Grid.Column="1">
                            <GroupBox Margin="4" Height="auto">
                                <StackPanel>

                                    <StackPanel Orientation="Vertical" Margin="0,0">
                                        <Label Content="Overlay Information" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayShowCharName}" Content="Show name of the active character" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayShowCharLocation}" Content="Show location of the active character" />
                                        <Label Content="Hunter Mode Information" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayShowNPCKills}" Content="Show NPC kills" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayShowNPCKillDelta}" Content="Show NPC kill delta" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayShowRoute}" Content="Show the current route" />
                                        <CheckBox Margin="0,3" IsChecked="{Binding Path=OverlayHunterModeShowFullRegion}" Content="Show the full region in hunter mode" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>

                <TabItem Header="Colours">
                    <Grid Height="362">
                        <ScrollViewer>
                            <StackPanel>
                                <xctk:PropertyGrid x:Name="ColoursPropertyGrid" AutoGenerateProperties="True" ShowSearchBox="False" ShowSortOptions="False">
                                    <xctk:PropertyGrid.CategoryGroupHeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Foreground="Black" />
                                        </DataTemplate>
                                    </xctk:PropertyGrid.CategoryGroupHeaderTemplate>
                                </xctk:PropertyGrid>
                                <Button x:Name="ResetColourData" Click="ResetColourData_Click" Content="Reset Colours" Margin="0,2" />
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Debug">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <GroupBox Header="General" Margin="4" Height="auto">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Path=Debug_EnableMapEdit}" Margin="0,2">Enable Universe Map Edits</CheckBox>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,2">
                <Button Content="Default" Margin="3,0" Width="55" Click="Prefs_Default_Click" />
                <Button Content="OK" Margin="3,0" Width="55" Click="Prefs_OK_Click" />
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>